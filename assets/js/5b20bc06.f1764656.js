"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[15674],{49119:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=n(24246),s=n(71670);const a={id:"0_design_principles",title:"Design Principles",sidebar_label:"Design Principles"},r=void 0,o={id:"3_manage_nifi/1_manage_clusters/0_design_principles",title:"Design Principles",description:"Pod level management",source:"@site/../docs/3_manage_nifi/1_manage_clusters/0_design_principles.md",sourceDirName:"3_manage_nifi/1_manage_clusters",slug:"/3_manage_nifi/1_manage_clusters/0_design_principles",permalink:"/nifikop/docs/next/3_manage_nifi/1_manage_clusters/0_design_principles",draft:!1,unlisted:!1,editUrl:"https://github.com/konpyutaika/nifikop/edit/master/site/website/../docs/3_manage_nifi/1_manage_clusters/0_design_principles.md",tags:[],version:"current",lastUpdatedBy:"Alexandre Guitton",lastUpdatedAt:1664046775,formattedLastUpdatedAt:"Sep 24, 2022",frontMatter:{id:"0_design_principles",title:"Design Principles",sidebar_label:"Design Principles"},sidebar:"docs",previous:{title:"Kubectl Plugin",permalink:"/nifikop/docs/next/2_deploy_nifikop/3_kubectl_plugin"},next:{title:"Quick start",permalink:"/nifikop/docs/next/3_manage_nifi/1_manage_clusters/1_deploy_cluster/1_quick_start"}},l={},c=[{value:"Pod level management",id:"pod-level-management",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"pod-level-management",children:"Pod level management"}),"\n",(0,i.jsxs)(t.p,{children:["NiFi is a stateful application. The first piece of the puzzle is the Node, which is a simple server capable of createing/forming a cluster with other Nodes. Every Node has his own ",(0,i.jsx)(t.strong,{children:"unique"})," configuration which differs slightly from all others."]}),"\n",(0,i.jsxs)(t.p,{children:["All NiFi on Kubernetes setup use ",(0,i.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",children:"StatefulSet"})," to create a NiFi Cluster. Just to quickly recap from the K8s docs:"]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"StatefulSet manages the deployment and scaling of a set of Pods, and provide guarantees about their ordering and uniqueness. Like a Deployment, a StatefulSet manages Pods that are based on an identical container spec. Unlike a Deployment, a StatefulSet maintains sticky identities for each of its Pods. These pods are created from the same spec, but are not interchangeable: each has a persistent identifier that is maintained across any rescheduling."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"How does this looks from the perspective of Apache NiFi ?"}),"\n",(0,i.jsx)(t.p,{children:"With StatefulSet we get :"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"unique Node IDs generated during Pod startup"}),"\n",(0,i.jsx)(t.li,{children:"networking between Nodes with headless services"}),"\n",(0,i.jsx)(t.li,{children:"unique Persistent Volumes for Nodes"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Using StatefulSet we ",(0,i.jsx)(t.strong,{children:"lose"})," the ability to :"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"modify the configuration of unique Nodes"}),"\n",(0,i.jsx)(t.li,{children:"remove a specific Node from a cluster (StatefulSet always removes the most recently created Node)"}),"\n",(0,i.jsx)(t.li,{children:"use multiple, different Persistent Volumes for each Node"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The NiFi Operator uses ",(0,i.jsx)(t.code,{children:"simple"})," Pods, ConfigMaps, and PersistentVolumeClaims, instead of StatefulSet (based on the design used by ",(0,i.jsx)(t.a,{href:"https://github.com/banzaicloud/kafka-operator",children:"Banzai Cloud Kafka Operator"}),").\nUsing these resources allows us to build an Operator which is better suited to NiFi."]}),"\n",(0,i.jsx)(t.p,{children:"With the NiFi operator we can:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"modify the configuration of unique Nodes"}),"\n",(0,i.jsx)(t.li,{children:"remove specific Nodes from clusters"}),"\n",(0,i.jsx)(t.li,{children:"use multiple Persistent Volumes for each Node"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},71670:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>r});var i=n(27378);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);