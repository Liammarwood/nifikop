"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[97315],{74634:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=n(24246),o=n(71670);const r={id:"1_oidc",title:"OpenId Connect",sidebar_label:"OpenId Connect"},s=void 0,a={id:"3_tasks/2_security/2_authentication/1_oidc",title:"OpenId Connect",description:"To enable authentication via OpenId Connect refering to NiFi Administration guide required some configuration into nifi.properties.",source:"@site/versioned_docs/version-v0.14.0/3_tasks/2_security/2_authentication/1_oidc.md",sourceDirName:"3_tasks/2_security/2_authentication",slug:"/3_tasks/2_security/2_authentication/1_oidc",permalink:"/nifikop/docs/v0.14.0/3_tasks/2_security/2_authentication/1_oidc",draft:!1,unlisted:!1,editUrl:"https://github.com/konpyutaika/nifikop/edit/master/site/website/versioned_docs/version-v0.14.0/3_tasks/2_security/2_authentication/1_oidc.md",tags:[],version:"v0.14.0",lastUpdatedBy:"Alexandre Guitton",lastUpdatedAt:1661532850,formattedLastUpdatedAt:"Aug 26, 2022",frontMatter:{id:"1_oidc",title:"OpenId Connect",sidebar_label:"OpenId Connect"},sidebar:"docs",previous:{title:"SSL",permalink:"/nifikop/docs/v0.14.0/3_tasks/2_security/1_ssl"},next:{title:"Custom Authorizers",permalink:"/nifikop/docs/v0.14.0/3_tasks/2_security/2_authorization/1_authorizer"}},c={},d=[];function u(i){const e={a:"a",code:"code",p:"p",pre:"pre",...(0,o.a)(),...i.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:["To enable authentication via OpenId Connect refering to ",(0,t.jsx)(e.a,{href:"https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html",children:"NiFi Administration guide"})," required some configuration into ",(0,t.jsx)(e.code,{children:"nifi.properties"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["In addition and to ensure multiple identity provider support, we recommended to add the following configuration to your ",(0,t.jsx)(e.code,{children:"nifi.properties"})," :"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sh",children:"nifi.security.identity.mapping.pattern.dn=CN=([^,]*)(?:, (?:O|OU)=.*)?\nnifi.security.identity.mapping.value.dn=$1\nnifi.security.identity.mapping.transform.dn=NONE\n"})}),"\n",(0,t.jsxs)(e.p,{children:["To perform this with ",(0,t.jsx)(e.code,{children:"NiFiKop"})," you just have to configure the ",(0,t.jsx)(e.code,{children:"Spec.NifiProperties.OverrideConfigs"})," field with your OIDC configuration, for example :"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"apiVersion: nifi.konpyutaika.com/v1alpha1\nkind: NifiCluster\n...\nspec:\n  ...\n  readOnlyConfig:\n    # NifiProperties configuration that will be applied to the node.\n    nifiProperties:\n      webProxyHosts:\n        - nifistandard2.trycatchlearn.fr:8443\n      # Additionnals nifi.properties configuration that will override the one produced based\n      # on template and configurations.\n      overrideConfigs: |\n        nifi.security.user.oidc.discovery.url=<oidc server discovery url>\n        nifi.security.user.oidc.client.id=<oidc client's id>\n        nifi.security.user.oidc.client.secret=<oidc client's secret>\n        nifi.security.identity.mapping.pattern.dn=CN=([^,]*)(?:, (?:O|OU)=.*)?\n        nifi.security.identity.mapping.value.dn=$1\n        nifi.security.identity.mapping.transform.dn=NONE\n      ...\n   ...\n...\n"})})]})}function p(i={}){const{wrapper:e}={...(0,o.a)(),...i.components};return e?(0,t.jsx)(e,{...i,children:(0,t.jsx)(u,{...i})}):u(i)}},71670:(i,e,n)=>{n.d(e,{Z:()=>a,a:()=>s});var t=n(27378);const o={},r=t.createContext(o);function s(i){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function a(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(o):i.components||o:s(i.components),t.createElement(r.Provider,{value:e},i.children)}}}]);